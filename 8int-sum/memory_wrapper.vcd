$date
	Tue Mar 11 12:11:13 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_wallace_tree_sum $end
$var wire 1 ! done $end
$var wire 32 " acc_wstrb [31:0] $end
$var wire 256 # acc_wdata [255:0] $end
$var wire 1 $ acc_valid $end
$var wire 19 % acc_addr [18:0] $end
$var reg 32 & N [31:0] $end
$var reg 256 ' acc_rdata [255:0] $end
$var reg 1 ( acc_ready $end
$var reg 1 ) acc_rvalid $end
$var reg 1 * clk $end
$var reg 19 + input_addr [18:0] $end
$var reg 19 , output_addr [18:0] $end
$var reg 19 - read_addr [18:0] $end
$var reg 2 . read_delay [1:0] $end
$var reg 1 / read_pending $end
$var reg 1 0 rst_n $end
$var reg 1 1 start $end
$scope module dut $end
$var wire 32 2 N [31:0] $end
$var wire 256 3 acc_rdata [255:0] $end
$var wire 1 ( acc_ready $end
$var wire 1 ) acc_rvalid $end
$var wire 1 * clk $end
$var wire 19 4 input_addr [18:0] $end
$var wire 19 5 output_addr [18:0] $end
$var wire 1 0 rst_n $end
$var wire 1 1 start $end
$var reg 19 6 acc_addr [18:0] $end
$var reg 1 $ acc_valid $end
$var reg 256 7 acc_wdata [255:0] $end
$var reg 32 8 acc_wstrb [31:0] $end
$var reg 32 9 count [31:0] $end
$var reg 19 : current_input_addr [18:0] $end
$var reg 19 ; current_output_addr [18:0] $end
$var reg 1 ! done $end
$var reg 32 < final_sum [31:0] $end
$var reg 2 = input_head [1:0] $end
$var reg 2 > input_tail [1:0] $end
$var reg 2 ? output_head [1:0] $end
$var reg 2 @ output_tail [1:0] $end
$var reg 3 A state [2:0] $end
$var reg 1 B v_final $end
$var reg 1 C v_stage1 $end
$var reg 1 D v_stage2 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0D
0C
0B
b0 A
b0 @
b0 ?
b0 >
b0 =
bx <
b0 ;
b0 :
b0 9
bx 8
bx 7
bx 6
b10000 5
b0 4
b0 3
b10 2
01
00
0/
b0 .
bx -
b10000 ,
b0 +
0*
0)
0(
b0 '
b10 &
bx %
0$
bx #
bx "
0!
$end
#5
1*
#10
0*
10
#15
1*
#20
0*
11
#25
b10000 ;
b1 A
1*
#30
0*
01
#35
b0 "
b0 8
b0 %
b0 6
1$
1*
#40
0*
#45
b10 .
1/
b0 -
1(
1*
#50
0*
#55
b10 A
b1 :
0$
b1 .
0(
1*
#60
0*
#65
b0 .
1*
#70
0*
#75
0/
1)
b11100000000000000000000000000000110000000000000000000000000000001010000000000000000000000000000010000000000000000000000000000000011000000000000000000000000000000100000000000000000000000000000000100000000000000000000000000000000 '
b11100000000000000000000000000000110000000000000000000000000000001010000000000000000000000000000010000000000000000000000000000000011000000000000000000000000000000100000000000000000000000000000000100000000000000000000000000000000 3
1*
#80
0*
#85
0)
b1 A
b1 >
1*
#90
0*
#95
b11 A
1*
#100
0*
#105
b1 =
1C
1*
#110
0*
#115
0C
b1 %
b1 6
1$
1D
1*
#120
0*
#125
b10 .
1/
b1 -
1(
1B
b11100 <
0D
1*
#130
0*
#135
b1 9
b1 @
0B
b10 :
0$
b1 .
0(
1*
#140
0*
#145
b0 .
b1111 "
b1111 8
b11100 #
b11100 7
b10000 %
b10000 6
1$
1*
#150
0*
#155
1(
0/
1)
b111100000000000000000000000000001110000000000000000000000000000011010000000000000000000000000000110000000000000000000000000000001011000000000000000000000000000010100000000000000000000000000000100100000000000000000000000000001000 '
b111100000000000000000000000000001110000000000000000000000000000011010000000000000000000000000000110000000000000000000000000000001011000000000000000000000000000010100000000000000000000000000000100100000000000000000000000000001000 3
1*
#160
0*
#165
0)
1(
b10 >
b10001 ;
b1 ?
0$
1*
#170
0*
#175
b10 =
1C
0(
1*
#180
0*
#185
1D
0C
b0 "
b0 8
b10 %
b10 6
1$
1*
#190
0*
#195
1B
b1011100 <
0D
b10 .
1/
b10 -
1(
1*
#200
0*
#205
b1 .
0(
b10 9
b10 @
0B
b11 :
0$
1*
#210
0*
#215
b1111 "
b1111 8
b1011100 #
b1011100 7
b10001 %
b10001 6
1$
b0 .
1*
#220
0*
#225
1(
0/
1)
bx '
bx 3
1*
#230
0*
#235
b11 >
b10010 ;
b10 ?
0$
0)
1(
1*
#240
0*
#245
0(
b110 A
b11 =
1C
1*
#250
0*
#255
b0 A
1!
1D
1*
#260
0*
#265
1*
